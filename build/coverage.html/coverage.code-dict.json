{"/home/travis/build/npmtest/node-npmtest-js-cookie/test.js":"/* istanbul instrument in package npmtest_js_cookie */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        switch (local.modeJs) {\n        // re-init local from window.local\n        case 'browser':\n            local = local.global.utility2.objectSetDefault(\n                local.global.utility2_rollup || local.global.local,\n                local.global.utility2\n            );\n            break;\n        // re-init local from example.js\n        case 'node':\n            local = (local.global.utility2_rollup || require('utility2'))\n                .requireExampleJsFromReadme();\n            break;\n        }\n        // export local\n        local.global.local = local;\n    }());\n\n\n\n    // run shared js-env code - function\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - function\n    case 'browser':\n        break;\n\n\n\n    // run node js-env code - function\n    case 'node':\n        break;\n    }\n\n\n\n    // run shared js-env code - post-init\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - post-init\n    case 'browser':\n        // run tests\n        local.nop(local.modeTest &&\n            document.querySelector('#testRunButton1') &&\n            document.querySelector('#testRunButton1').click());\n        break;\n\n\n\n    // run node js-env code - post-init\n    /* istanbul ignore next */\n    case 'node':\n        local.testCase_buildApidoc_default = local.testCase_buildApidoc_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApidoc's default handling-behavior-behavior\n         */\n            options = { modulePathList: module.paths };\n            local.buildApidoc(options, onError);\n        };\n\n        local.testCase_buildApp_default = local.testCase_buildApp_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApp's default handling-behavior-behavior\n         */\n            local.testCase_buildReadme_default(options, local.onErrorThrow);\n            local.testCase_buildLib_default(options, local.onErrorThrow);\n            local.testCase_buildTest_default(options, local.onErrorThrow);\n            local.testCase_buildCustomOrg_default(options, local.onErrorThrow);\n            options = [];\n            local.buildApp(options, onError);\n        };\n\n        local.testCase_buildCustomOrg_default = local.testCase_buildCustomOrg_default ||\n            function (options, onError) {\n            /*\n             * this function will test buildCustomOrg's default handling-behavior\n             */\n                options = {};\n                local.buildCustomOrg(options, onError);\n            };\n\n        local.testCase_buildLib_default = local.testCase_buildLib_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildLib's default handling-behavior\n         */\n            options = {};\n            local.buildLib(options, onError);\n        };\n\n        local.testCase_buildReadme_default = local.testCase_buildReadme_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildReadme's default handling-behavior-behavior\n         */\n            options = {};\n            local.buildReadme(options, onError);\n        };\n\n        local.testCase_buildTest_default = local.testCase_buildTest_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildTest's default handling-behavior\n         */\n            options = {};\n            local.buildTest(options, onError);\n        };\n\n        local.testCase_webpage_default = local.testCase_webpage_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test webpage's default handling-behavior\n         */\n            options = { modeCoverageMerge: true, url: local.serverLocalHost + '?modeTest=1' };\n            local.browserTest(options, onError);\n        };\n\n        // run test-server\n        local.testRunServer(local);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-js-cookie/lib.npmtest_js_cookie.js":"/* istanbul instrument in package npmtest_js_cookie */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || local;\n        // init lib\n        local.local = local.npmtest_js_cookie = local;\n        // init exports\n        if (local.modeJs === 'browser') {\n            local.global.utility2_npmtest_js_cookie = local;\n        } else {\n            module.exports = local;\n            module.exports.__dirname = __dirname;\n            module.exports.module = module;\n        }\n    }());\n}());\n","/home/travis/build/npmtest/node-npmtest-js-cookie/example.js":"/*\nexample.js\n\nquickstart example\n\ninstruction\n    1. save this script as example.js\n    2. run the shell command:\n        $ npm install npmtest-js-cookie && PORT=8081 node example.js\n    3. play with the browser-demo on http://127.0.0.1:8081\n*/\n\n\n\n/* istanbul instrument in package npmtest_js_cookie */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || (local.modeJs === 'browser'\n            ? local.global.utility2_npmtest_js_cookie\n            : global.utility2_moduleExports);\n        // export local\n        local.global.local = local;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // post-init\n    // run browser js-env code - post-init\n    /* istanbul ignore next */\n    case 'browser':\n        local.testRunBrowser = function (event) {\n            if (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('onreset'))) {\n                // reset output\n                Array.from(\n                    document.querySelectorAll('body > .resettable')\n                ).forEach(function (element) {\n                    switch (element.tagName) {\n                    case 'INPUT':\n                    case 'TEXTAREA':\n                        element.value = '';\n                        break;\n                    default:\n                        element.textContent = '';\n                    }\n                });\n            }\n            switch (event && event.currentTarget && event.currentTarget.id) {\n            case 'testRunButton1':\n                // show tests\n                if (document.querySelector('#testReportDiv1').style.display === 'none') {\n                    document.querySelector('#testReportDiv1').style.display = 'block';\n                    document.querySelector('#testRunButton1').textContent =\n                        'hide internal test';\n                    local.modeTest = true;\n                    local.testRunDefault(local);\n                // hide tests\n                } else {\n                    document.querySelector('#testReportDiv1').style.display = 'none';\n                    document.querySelector('#testRunButton1').textContent = 'run internal test';\n                }\n                break;\n            // custom-case\n            default:\n                break;\n            }\n            if (document.querySelector('#inputTextareaEval1') && (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('oneval')))) {\n                // try to eval input-code\n                try {\n                    /*jslint evil: true*/\n                    eval(document.querySelector('#inputTextareaEval1').value);\n                } catch (errorCaught) {\n                    console.error(errorCaught);\n                }\n            }\n        };\n        // log stderr and stdout to #outputTextareaStdout1\n        ['error', 'log'].forEach(function (key) {\n            console[key + '_original'] = console[key];\n            console[key] = function () {\n                var element;\n                console[key + '_original'].apply(console, arguments);\n                element = document.querySelector('#outputTextareaStdout1');\n                if (!element) {\n                    return;\n                }\n                // append text to #outputTextareaStdout1\n                element.value += Array.from(arguments).map(function (arg) {\n                    return typeof arg === 'string'\n                        ? arg\n                        : JSON.stringify(arg, null, 4);\n                }).join(' ') + '\\n';\n                // scroll textarea to bottom\n                element.scrollTop = element.scrollHeight;\n            };\n        });\n        // init event-handling\n        ['change', 'click', 'keyup'].forEach(function (event) {\n            Array.from(document.querySelectorAll('.on' + event)).forEach(function (element) {\n                element.addEventListener(event, local.testRunBrowser);\n            });\n        });\n        // run tests\n        local.testRunBrowser();\n        break;\n\n\n\n    // run node js-env code - post-init\n    /* istanbul ignore next */\n    case 'node':\n        // export local\n        module.exports = local;\n        // require modules\n        local.fs = require('fs');\n        local.http = require('http');\n        local.url = require('url');\n        // init assets\n        local.assetsDict = local.assetsDict || {};\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.index.template.html'] = '\\\n<!doctype html>\\n\\\n<html lang=\"en\">\\n\\\n<head>\\n\\\n<meta charset=\"UTF-8\">\\n\\\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\\n<title>{{env.npm_package_name}} (v{{env.npm_package_version}})</title>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n    box-sizing: false,\\n\\\n    universal-selector: false\\n\\\n*/\\n\\\n* {\\n\\\n    box-sizing: border-box;\\n\\\n}\\n\\\nbody {\\n\\\n    background: #dde;\\n\\\n    font-family: Arial, Helvetica, sans-serif;\\n\\\n    margin: 2rem;\\n\\\n}\\n\\\nbody > * {\\n\\\n    margin-bottom: 1rem;\\n\\\n}\\n\\\n.utility2FooterDiv {\\n\\\n    margin-top: 20px;\\n\\\n    text-align: center;\\n\\\n}\\n\\\n</style>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n*/\\n\\\ntextarea {\\n\\\n    font-family: monospace;\\n\\\n    height: 10rem;\\n\\\n    width: 100%;\\n\\\n}\\n\\\ntextarea[readonly] {\\n\\\n    background: #ddd;\\n\\\n}\\n\\\n</style>\\n\\\n</head>\\n\\\n<body>\\n\\\n<!-- utility2-comment\\n\\\n<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 0.5s, width 1.5s; width: 25%;\"></div>\\n\\\nutility2-comment -->\\n\\\n<h1>\\n\\\n<!-- utility2-comment\\n\\\n    <a\\n\\\n        {{#if env.npm_package_homepage}}\\n\\\n        href=\"{{env.npm_package_homepage}}\"\\n\\\n        {{/if env.npm_package_homepage}}\\n\\\n        target=\"_blank\"\\n\\\n    >\\n\\\nutility2-comment -->\\n\\\n        {{env.npm_package_name}} (v{{env.npm_package_version}})\\n\\\n<!-- utility2-comment\\n\\\n    </a>\\n\\\nutility2-comment -->\\n\\\n</h1>\\n\\\n<h3>{{env.npm_package_description}}</h3>\\n\\\n<!-- utility2-comment\\n\\\n<h4><a download href=\"assets.app.js\">download standalone app</a></h4>\\n\\\n<button class=\"onclick onreset\" id=\"testRunButton1\">run internal test</button><br>\\n\\\n<div id=\"testReportDiv1\" style=\"display: none;\"></div>\\n\\\nutility2-comment -->\\n\\\n\\n\\\n\\n\\\n\\n\\\n<label>stderr and stdout</label>\\n\\\n<textarea class=\"resettable\" id=\"outputTextareaStdout1\" readonly></textarea>\\n\\\n<!-- utility2-comment\\n\\\n{{#if isRollup}}\\n\\\n<script src=\"assets.app.js\"></script>\\n\\\n{{#unless isRollup}}\\n\\\nutility2-comment -->\\n\\\n<script src=\"assets.utility2.rollup.js\"></script>\\n\\\n<script src=\"jsonp.utility2._stateInit?callback=window.utility2._stateInit\"></script>\\n\\\n<script src=\"assets.npmtest_js_cookie.rollup.js\"></script>\\n\\\n<script src=\"assets.example.js\"></script>\\n\\\n<script src=\"assets.test.js\"></script>\\n\\\n<!-- utility2-comment\\n\\\n{{/if isRollup}}\\n\\\nutility2-comment -->\\n\\\n<div class=\"utility2FooterDiv\">\\n\\\n    [ this app was created with\\n\\\n    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\\n    ]\\n\\\n</div>\\n\\\n</body>\\n\\\n</html>\\n\\\n';\n        /* jslint-ignore-end */\n        if (local.templateRender) {\n            local.assetsDict['/'] = local.templateRender(\n                local.assetsDict['/assets.index.template.html'],\n                {\n                    env: local.objectSetDefault(local.env, {\n                        npm_package_description: 'the greatest app in the world!',\n                        npm_package_name: 'my-app',\n                        npm_package_nameAlias: 'my_app',\n                        npm_package_version: '0.0.1'\n                    })\n                }\n            );\n        } else {\n            local.assetsDict['/'] = local.assetsDict['/assets.index.template.html']\n                .replace((/\\{\\{env\\.(\\w+?)\\}\\}/g), function (match0, match1) {\n                    // jslint-hack\n                    String(match0);\n                    switch (match1) {\n                    case 'npm_package_description':\n                        return 'the greatest app in the world!';\n                    case 'npm_package_name':\n                        return 'my-app';\n                    case 'npm_package_nameAlias':\n                        return 'my_app';\n                    case 'npm_package_version':\n                        return '0.0.1';\n                    }\n                });\n        }\n        // run the cli\n        if (local.global.utility2_rollup || module !== require.main) {\n            break;\n        }\n        local.assetsDict['/assets.example.js'] =\n            local.assetsDict['/assets.example.js'] ||\n            local.fs.readFileSync(__filename, 'utf8');\n        local.assetsDict['/assets.npmtest_js_cookie.rollup.js'] =\n            local.assetsDict['/assets.npmtest_js_cookie.rollup.js'] ||\n            local.fs.readFileSync(\n                // buildCustomOrg-hack\n                local.npmtest_js_cookie.__dirname +\n                    '/lib.npmtest_js_cookie.js',\n                'utf8'\n            ).replace((/^#!/), '//');\n        local.assetsDict['/favicon.ico'] = local.assetsDict['/favicon.ico'] || '';\n        // if $npm_config_timeout_exit exists,\n        // then exit this process after $npm_config_timeout_exit ms\n        if (Number(process.env.npm_config_timeout_exit)) {\n            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));\n        }\n        // start server\n        if (local.global.utility2_serverHttp1) {\n            break;\n        }\n        process.env.PORT = process.env.PORT || '8081';\n        console.error('server starting on port ' + process.env.PORT);\n        local.http.createServer(function (request, response) {\n            request.urlParsed = local.url.parse(request.url);\n            if (local.assetsDict[request.urlParsed.pathname] !== undefined) {\n                response.end(local.assetsDict[request.urlParsed.pathname]);\n                return;\n            }\n            response.statusCode = 404;\n            response.end();\n        }).listen(process.env.PORT);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-js-cookie/node_modules/js-cookie/src/js.cookie.js":"/*!\n * JavaScript Cookie v2.1.4\n * https://github.com/js-cookie/js-cookie\n *\n * Copyright 2006, 2015 Klaus Hartl & Fagner Brack\n * Released under the MIT license\n */\n;(function (factory) {\n\tvar registeredInModuleLoader = false;\n\tif (typeof define === 'function' && define.amd) {\n\t\tdefine(factory);\n\t\tregisteredInModuleLoader = true;\n\t}\n\tif (typeof exports === 'object') {\n\t\tmodule.exports = factory();\n\t\tregisteredInModuleLoader = true;\n\t}\n\tif (!registeredInModuleLoader) {\n\t\tvar OldCookies = window.Cookies;\n\t\tvar api = window.Cookies = factory();\n\t\tapi.noConflict = function () {\n\t\t\twindow.Cookies = OldCookies;\n\t\t\treturn api;\n\t\t};\n\t}\n}(function () {\n\tfunction extend () {\n\t\tvar i = 0;\n\t\tvar result = {};\n\t\tfor (; i < arguments.length; i++) {\n\t\t\tvar attributes = arguments[ i ];\n\t\t\tfor (var key in attributes) {\n\t\t\t\tresult[key] = attributes[key];\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}\n\n\tfunction init (converter) {\n\t\tfunction api (key, value, attributes) {\n\t\t\tvar result;\n\t\t\tif (typeof document === 'undefined') {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Write\n\n\t\t\tif (arguments.length > 1) {\n\t\t\t\tattributes = extend({\n\t\t\t\t\tpath: '/'\n\t\t\t\t}, api.defaults, attributes);\n\n\t\t\t\tif (typeof attributes.expires === 'number') {\n\t\t\t\t\tvar expires = new Date();\n\t\t\t\t\texpires.setMilliseconds(expires.getMilliseconds() + attributes.expires * 864e+5);\n\t\t\t\t\tattributes.expires = expires;\n\t\t\t\t}\n\n\t\t\t\t// We're using \"expires\" because \"max-age\" is not supported by IE\n\t\t\t\tattributes.expires = attributes.expires ? attributes.expires.toUTCString() : '';\n\n\t\t\t\ttry {\n\t\t\t\t\tresult = JSON.stringify(value);\n\t\t\t\t\tif (/^[\\{\\[]/.test(result)) {\n\t\t\t\t\t\tvalue = result;\n\t\t\t\t\t}\n\t\t\t\t} catch (e) {}\n\n\t\t\t\tif (!converter.write) {\n\t\t\t\t\tvalue = encodeURIComponent(String(value))\n\t\t\t\t\t\t.replace(/%(23|24|26|2B|3A|3C|3E|3D|2F|3F|40|5B|5D|5E|60|7B|7D|7C)/g, decodeURIComponent);\n\t\t\t\t} else {\n\t\t\t\t\tvalue = converter.write(value, key);\n\t\t\t\t}\n\n\t\t\t\tkey = encodeURIComponent(String(key));\n\t\t\t\tkey = key.replace(/%(23|24|26|2B|5E|60|7C)/g, decodeURIComponent);\n\t\t\t\tkey = key.replace(/[\\(\\)]/g, escape);\n\n\t\t\t\tvar stringifiedAttributes = '';\n\n\t\t\t\tfor (var attributeName in attributes) {\n\t\t\t\t\tif (!attributes[attributeName]) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\tstringifiedAttributes += '; ' + attributeName;\n\t\t\t\t\tif (attributes[attributeName] === true) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\tstringifiedAttributes += '=' + attributes[attributeName];\n\t\t\t\t}\n\t\t\t\treturn (document.cookie = key + '=' + value + stringifiedAttributes);\n\t\t\t}\n\n\t\t\t// Read\n\n\t\t\tif (!key) {\n\t\t\t\tresult = {};\n\t\t\t}\n\n\t\t\t// To prevent the for loop in the first place assign an empty array\n\t\t\t// in case there are no cookies at all. Also prevents odd result when\n\t\t\t// calling \"get()\"\n\t\t\tvar cookies = document.cookie ? document.cookie.split('; ') : [];\n\t\t\tvar rdecode = /(%[0-9A-Z]{2})+/g;\n\t\t\tvar i = 0;\n\n\t\t\tfor (; i < cookies.length; i++) {\n\t\t\t\tvar parts = cookies[i].split('=');\n\t\t\t\tvar cookie = parts.slice(1).join('=');\n\n\t\t\t\tif (cookie.charAt(0) === '\"') {\n\t\t\t\t\tcookie = cookie.slice(1, -1);\n\t\t\t\t}\n\n\t\t\t\ttry {\n\t\t\t\t\tvar name = parts[0].replace(rdecode, decodeURIComponent);\n\t\t\t\t\tcookie = converter.read ?\n\t\t\t\t\t\tconverter.read(cookie, name) : converter(cookie, name) ||\n\t\t\t\t\t\tcookie.replace(rdecode, decodeURIComponent);\n\n\t\t\t\t\tif (this.json) {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tcookie = JSON.parse(cookie);\n\t\t\t\t\t\t} catch (e) {}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (key === name) {\n\t\t\t\t\t\tresult = cookie;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!key) {\n\t\t\t\t\t\tresult[name] = cookie;\n\t\t\t\t\t}\n\t\t\t\t} catch (e) {}\n\t\t\t}\n\n\t\t\treturn result;\n\t\t}\n\n\t\tapi.set = api;\n\t\tapi.get = function (key) {\n\t\t\treturn api.call(api, key);\n\t\t};\n\t\tapi.getJSON = function () {\n\t\t\treturn api.apply({\n\t\t\t\tjson: true\n\t\t\t}, [].slice.call(arguments));\n\t\t};\n\t\tapi.defaults = {};\n\n\t\tapi.remove = function (key, attributes) {\n\t\t\tapi(key, '', extend(attributes, {\n\t\t\t\texpires: -1\n\t\t\t}));\n\t\t};\n\n\t\tapi.withConverter = init;\n\n\t\treturn api;\n\t}\n\n\treturn init(function () {});\n}));\n","/home/travis/build/npmtest/node-npmtest-js-cookie/node_modules/js-cookie/Gruntfile.js":"/*jshint node:true */\n'use strict';\n\nmodule.exports = function (grunt) {\n\n\tfunction encodingMiddleware(request, response, next) {\n\t\tvar url = require('url').parse(request.url, true, true);\n\t\tvar query = url.query;\n\t\tvar pathname = url.pathname;\n\n\t\tif (pathname !== '/encoding') {\n\t\t\tnext();\n\t\t\treturn;\n\t\t}\n\n\t\tvar cookieName = query.name;\n\t\tvar cookieValue = query.value;\n\n\t\tresponse.setHeader('content-type', 'application/json');\n\t\tresponse.end(JSON.stringify({\n\t\t\tname: cookieName,\n\t\t\tvalue: cookieValue\n\t\t}));\n\t}\n\n\tgrunt.initConfig({\n\t\tpkg: grunt.file.readJSON('package.json'),\n\t\tqunit: {\n\t\t\tall: {\n\t\t\t\toptions: {\n\t\t\t\t\turls: [\n\t\t\t\t\t\t'http://127.0.0.1:9998/',\n\t\t\t\t\t\t'http://127.0.0.1:9998/amd.html',\n\t\t\t\t\t\t'http://127.0.0.1:9998/environment-with-amd-and-umd.html',\n\t\t\t\t\t\t'http://127.0.0.1:9998/encoding.html?integration_baseurl=http://127.0.0.1:9998/'\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t},\n\t\t},\n\t\tnodeunit: {\n\t\t\tall: 'test/node.js'\n\t\t},\n\t\tjshint: {\n\t\t\toptions: {\n\t\t\t\tjshintrc: true\n\t\t\t},\n\t\t\tgrunt: 'Gruntfile.js',\n\t\t\tsource: 'src/**/*.js',\n\t\t\ttests: ['test/**/*.js', '!test/polyfill.js']\n\t\t},\n\t\tjscs: {\n\t\t\toptions: {\n\t\t\t\trequireCommaBeforeLineBreak: true,\n\t\t\t\trequireLineFeedAtFileEnd: true,\n\t\t\t\trequireSemicolons: true,\n\t\t\t\trequireSpaceBeforeKeywords: ['else', 'while', 'catch'],\n\t\t\t\trequireSpaceAfterKeywords: true,\n\t\t\t\trequireSpaceAfterLineComment: true,\n\t\t\t\trequireSpaceBeforeBlockStatements: true,\n\t\t\t\trequireSpaceBeforeObjectValues: true,\n\t\t\t\tvalidateIndentation: '\\t',\n\t\t\t\tvalidateLineBreaks: 'LF',\n\t\t\t\tvalidateQuoteMarks: true,\n\t\t\t\tdisallowSpacesInsideArrayBrackets: 'all',\n\t\t\t\tdisallowSpacesInsideParentheses: true,\n\t\t\t\tdisallowTrailingWhitespace: true\n\t\t\t},\n\t\t\tgrunt: 'Gruntfile.js',\n\t\t\tsource: 'src/**/*.js',\n\t\t\ttests: ['test/**/*.js', '!test/polyfill.js']\n\t\t},\n\t\tuglify: {\n\t\t\toptions: {\n\t\t\t\tcompress: {\n\t\t\t\t\tunsafe: true\n\t\t\t\t},\n\t\t\t\tscrewIE8: false,\n\t\t\t\tbanner: '/*! <%= pkg.name %> v<%= pkg.version %> | <%= pkg.license %> */\\n'\n\t\t\t},\n\t\t\tbuild: {\n\t\t\t\tfiles: {\n\t\t\t\t\t'build/js.cookie.min.js': 'src/js.cookie.js',\n\t\t\t\t\t'build/js.cookie-<%= pkg.version %>.min.js': 'src/js.cookie.js'\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\twatch: {\n\t\t\toptions: {\n\t\t\t\tlivereload: true\n\t\t\t},\n\t\t\tfiles: '{src,test}/**/*.js',\n\t\t\ttasks: 'default'\n\t\t},\n\t\tcompare_size: {\n\t\t\tfiles: [\n\t\t\t\t'build/js.cookie-<%= pkg.version %>.min.js',\n\t\t\t\t'src/js.cookie.js'\n\t\t\t],\n\t\t\toptions: {\n\t\t\t\tcompress: {\n\t\t\t\t\tgz: function (fileContents) {\n\t\t\t\t\t\treturn require('gzip-js').zip(fileContents, {}).length;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tconnect: {\n\t\t\t'build-qunit': {\n\t\t\t\toptions: {\n\t\t\t\t\tport: 9998,\n\t\t\t\t\tbase: ['.', 'test'],\n\t\t\t\t\tmiddleware: function (connect, options, middlewares) {\n\t\t\t\t\t\tmiddlewares.unshift(encodingMiddleware);\n\t\t\t\t\t\treturn middlewares;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\t'build-sauce': {\n\t\t\t\toptions: {\n\t\t\t\t\tport: 9999,\n\t\t\t\t\tbase: ['.', 'test']\n\t\t\t\t}\n\t\t\t},\n\t\t\ttests: {\n\t\t\t\toptions: {\n\t\t\t\t\tport: 10000,\n\t\t\t\t\tbase: ['.', 'test'],\n\t\t\t\t\topen: 'http://127.0.0.1:10000',\n\t\t\t\t\tkeepalive: true,\n\t\t\t\t\tlivereload: true,\n\t\t\t\t\tmiddleware: function (connect, options, middlewares) {\n\t\t\t\t\t\tmiddlewares.unshift(encodingMiddleware);\n\t\t\t\t\t\treturn middlewares;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t'saucelabs-qunit': {\n\t\t\tall: {\n\t\t\t\toptions: {\n\t\t\t\t\turls: ['http://127.0.0.1:9999'],\n\t\t\t\t\ttestname: 'Sauce Test for js-cookie',\n\t\t\t\t\tbuild: process.env.TRAVIS_JOB_ID,\n\t\t\t\t\tpollInterval: 10000,\n\t\t\t\t\tstatusCheckAttempts: 90,\n\t\t\t\t\tthrottled: 3,\n\t\t\t\t\tbrowsers: (function () {\n\t\t\t\t\t\tvar browsers = {\n\t\t\t\t\t\t\t'iOS': [{\n\t\t\t\t\t\t\t\tbrowserName: 'iphone',\n\t\t\t\t\t\t\t\tplatform: 'OS X 10.10',\n\t\t\t\t\t\t\t\tversion: '8.2',\n\t\t\t\t\t\t\t\tdeviceName: 'iPhone Simulator'\n\t\t\t\t\t\t\t}, {\n\t\t\t\t\t\t\t\tbrowserName: 'iphone',\n\t\t\t\t\t\t\t\tplatform: 'OS X 10.10',\n\t\t\t\t\t\t\t\tversion: '8.2',\n\t\t\t\t\t\t\t\tdeviceName: 'iPad Simulator'\n\t\t\t\t\t\t\t}],\n\t\t\t\t\t\t\t'android': [{\n\t\t\t\t\t\t\t\tbrowserName: 'android',\n\t\t\t\t\t\t\t\tplatform: 'Linux',\n\t\t\t\t\t\t\t\tversion: '5.1',\n\t\t\t\t\t\t\t\tdeviceName: 'Android Emulator'\n\t\t\t\t\t\t\t}],\n\t\t\t\t\t\t\t'mac': [{\n\t\t\t\t\t\t\t\tbrowserName: 'safari',\n\t\t\t\t\t\t\t\tplatform: 'OS X 10.10',\n\t\t\t\t\t\t\t\tversion: '8.0'\n\t\t\t\t\t\t\t}, {\n\t\t\t\t\t\t\t\tbrowserName: 'firefox',\n\t\t\t\t\t\t\t\tplatform: 'OS X 10.10',\n\t\t\t\t\t\t\t\tversion: '36.0'\n\t\t\t\t\t\t\t}, {\n\t\t\t\t\t\t\t\tbrowserName: 'chrome',\n\t\t\t\t\t\t\t\tplatform: 'OS X 10.10',\n\t\t\t\t\t\t\t\tversiono: '41.0'\n\t\t\t\t\t\t\t}],\n\t\t\t\t\t\t\t'windows7': [{\n\t\t\t\t\t\t\t\tbrowserName: 'internet explorer',\n\t\t\t\t\t\t\t\tplatform: 'Windows 7',\n\t\t\t\t\t\t\t\tversion: '11.0'\n\t\t\t\t\t\t\t}, {\n\t\t\t\t\t\t\t\tbrowserName: 'internet explorer',\n\t\t\t\t\t\t\t\tplatform: 'Windows 7',\n\t\t\t\t\t\t\t\tversion: '10.0'\n\t\t\t\t\t\t\t}, {\n\t\t\t\t\t\t\t\tbrowserName: 'internet explorer',\n\t\t\t\t\t\t\t\tplatform: 'Windows 7',\n\t\t\t\t\t\t\t\tversion: '9.0'\n\t\t\t\t\t\t\t}, {\n\t\t\t\t\t\t\t\tbrowserName: 'opera',\n\t\t\t\t\t\t\t\tplatform: 'Windows 7',\n\t\t\t\t\t\t\t\tversion: '12.12'\n\t\t\t\t\t\t\t}],\n\t\t\t\t\t\t\t'windowsXP': [{\n\t\t\t\t\t\t\t\tbrowserName: 'internet explorer',\n\t\t\t\t\t\t\t\tplatform: 'Windows XP',\n\t\t\t\t\t\t\t\tversion: '8.0'\n\t\t\t\t\t\t\t}, {\n\t\t\t\t\t\t\t\tbrowserName: 'internet explorer',\n\t\t\t\t\t\t\t\tplatform: 'Windows XP',\n\t\t\t\t\t\t\t\tversion: '7.0'\n\t\t\t\t\t\t\t}, {\n\t\t\t\t\t\t\t\tbrowserName: 'internet explorer',\n\t\t\t\t\t\t\t\tplatform: 'Windows XP',\n\t\t\t\t\t\t\t\tversion: '6.0'\n\t\t\t\t\t\t\t}],\n\t\t\t\t\t\t\t'linux': [{\n\t\t\t\t\t\t\t\tbrowserName: 'opera',\n\t\t\t\t\t\t\t\tplatform: 'Linux',\n\t\t\t\t\t\t\t\tversion: '12.15'\n\t\t\t\t\t\t\t}, {\n\t\t\t\t\t\t\t\tbrowserName: 'firefox',\n\t\t\t\t\t\t\t\tplatform: 'Linux',\n\t\t\t\t\t\t\t\tversion: '37.0'\n\t\t\t\t\t\t\t}, {\n\t\t\t\t\t\t\t\tbrowserName: 'chrome',\n\t\t\t\t\t\t\t\tplatform: 'Linux',\n\t\t\t\t\t\t\t\tversion: '41.0'\n\t\t\t\t\t\t\t}]\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\tvar matrix = [];\n\t\t\t\t\t\tfor (var os in browsers) {\n\t\t\t\t\t\t\tmatrix = matrix.concat(browsers[os]);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn matrix;\n\t\t\t\t\t}())\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\n\n\t// Loading dependencies\n\tfor (var key in grunt.file.readJSON('package.json').devDependencies) {\n\t\tif (key !== 'grunt' && key.indexOf('grunt') === 0) {\n\t\t\tgrunt.loadNpmTasks(key);\n\t\t}\n\t}\n\n\tgrunt.registerTask('saucelabs', ['connect:build-sauce', 'saucelabs-qunit']);\n\tgrunt.registerTask('test', ['uglify', 'jshint', 'jscs', 'connect:build-qunit', 'qunit', 'nodeunit']);\n\n\tgrunt.registerTask('dev', ['test', 'compare_size']);\n\tgrunt.registerTask('ci', ['test', 'saucelabs']);\n\n\tgrunt.registerTask('default', 'dev');\n};\n"}